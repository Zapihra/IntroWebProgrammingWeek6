{"version":3,"sources":["../src/js/utils/dom.js","../src/js/utils/constants.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/colors.js","../src/js/utils/draw.js","../src/js/utils/animate.js","../src/js/utils/animation.js","../src/js/utils/export.js","../src/js/utils/date-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/axis-chart-utils.js","../src/js/chart.js","../node_modules/style-inject/dist/style-inject.es.js","../src/js/objects/SvgTip.js","../src/css/chartsCss.js","../src/js/charts/BaseChart.js","../src/js/charts/AggregationChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js","../src/js/charts/AxisChart.js","../src/js/charts/DonutChart.js","../src/js/index.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isHidden","el","offsetParent","isElementInViewport","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","isValidNumber","candidate","nonNegative","Number","isNaN","undefined","isFinite","round","deepClone","cloned","value","key","Date","getTime","isArray","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","p","floor","log10","l","shortened","pow","getSplineCurvePointsStr","xList","yList","points","i","push","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","controlPoint","current","previous","next","reverse","o","PI","command","reduce","acc","point","a","cps","cpe","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","RGB_RE","test","$","createSVG","tag","createElementNS","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeCircleStr","midArc","makeArcStrokePathStr","makeStrokeCircleStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","shortenNumbers","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","createElement","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","firstChild","container","innerHTML","treatAsUtc","date","result","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","seriesMultiple","maxLabelLength","getChartByType","AxisChart","chartTypes","error","css","insertAt","head","getElementsByTagName","styleSheet","cssText","createTextNode","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","exec","c","ch","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","_this","draw","ResizeObserver","resizeObserver","observe","disconnect","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","formatTooltipY","tooltipOptions","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","newOptions","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","ROW_HEIGHT","HEATMAP_SQUARE_SIZE","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","COL_WIDTH","moreText","HEATMAP_DISTRIBUTION_SIZE","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","replace","char","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","DonutChart","Chart","frappe","NAME","VERSION","Charts","styleInject","CHART_POST_ANIMATE_TIMEOUT","DEFAULT_AXIS_CHART_TYPE","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","DOT_OVERLAY_SIZE_INCR","PERCENTAGE_BAR_DEFAULT_HEIGHT","HEATMAP_GUTTER_SIZE","TOOLTIP_POINTER_TRIANGLE_HEIGHT","HEATMAP_COLORS_GREEN","FULL_ANGLE","NO_OF_YEAR_MONTHS","require","_frappeChartsMin","_typeof","obj","Symbol","iterator","constructor","prototype","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","arguments","apply","fetchButton","getElementById","_ref","_callee","code","query","res","_callee$","_context","fetch","headers","ok","json","_x","buildChart","_ref2","_callee2","municipality","population","theData","chartData","chart","_callee2$","_context2","municipalityCheck","dimension","Vuosi","category","_x2","_ref3","_callee3","resp","dataset","candidates","_callee3$","_context3","variables","valueTexts","toLowerCase","_x3","preventDefault","bundleURL","getBundleURLCached","getBundleURL","matches","stack","match","getBaseURL","bundle","updateLink","link","newLink","onload","remove","now","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module"],"mappings":"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ZPCA,IAA2B,GaOpB,CFRG,EEQA,CFRGhe,GEQC,CbPa,IAAA,AWDN,CAACk8B,MXCRl8B,QAAAA,AWDsB,CAAC,CXC1C,YWDuD,CAAC;AES1D,AFPA,IXCE,AYME,ADPE0Y,IXCAwF,CAAAA,AaMGwhB,CDAC,CDPG,CXCA1/B,EYMCkhB,ICAIwe,CDAC,ACAD,CbNL1/B,AYMK,CZNIke,AYMH,ACAE,IbNCA,IAAQle,QAAAA,CAASme,oBAAAA,CAAqB,MAAA,CAAA,CAAQ,CAAA,CAAA;EYOlE,ACAA,AFRW,CCQV,CAAC,EZNEjU,AaMAu1B,AFROtD,CXEPjyB,GAAQlK,AWFD,CCQFy1B,EDREqG,CCQC,EAAE,ACAA,EbNF97B,AaMI,CbNK6U,WWFV,EXEUA,CAAc,OAAA,CACnC3K,IWHWsqB,mBAAA,GAAAuF,IAAA,CAAG,SAAAqC,QAAMC,IAAI;IXGxBnyB,AYME,ACAA,AFTsB,CXGxBA,CAAMlI,EYMA68B,ADTkB7pB,EXGlBhT,CWHkB,EXGX,AWHWs6B,ECSX,GAAG,ADTQ,CCSP,CDTOC,CCSL,EZNN,AWHW,CCSF9G,CZJL,AWLOzoB,ECSC,CAAC8xB,CDTF,CXKP,GYIc,EZJ3B7gB,AYI6B8gB,CZJ7B9gB,IACEC,AYGgC,CZHhCA,AYGiC,CZH5BnI,UAAAA,GACPmI,CAAAA,CAAKnU,YAAAA,CAAaG,CAAAA,EAAOgU,CAAAA,CAAKnI,UAAAA,CAAAA,GAKhCmI,CAAAA,CAAKtU,WAAAA,CAAYM,CAAAA,AYHmF,CZGnFA,AYHoF,EZMnGA,CAAAA,CAAMkU,UAAAA,GACRlU,CAAAA,CAAMkU,UAAAA,CAAWC,OAAAA,GAAUL,CAAAA,GAE3B9T,CAAAA,CAAMN,WAAAA,CAAY5J,QAAAA,CAASse,cAAAA,CAAeN,CAAAA,CAAAA,CAAAA;EAAAA,AaR5C,EDAE,ADVsB,ICUlB6gB,GDVkBrK,ICUX,EAAE,aDVS,GAAAkB,IAAA,UAAA8G,SAAAC,QAAA;AXkBoBze,EaN5CyhB,IDDI,ADXoB,MEYd,CDDCT,ECCEW,QDDQ,CAACd,ADXEpC,CEYD,CAAC,KDDK,CAAC,ADXN,CCWO,ADXP5gB,CCWQ,CAAC,EDXT,CEYY,EFZZ4gB,QAAA,CAAA70B,IAAA;AzBL1B,I0BiBI,ACCA,IAAIg4B,AFbkB,CzBLVr2B,CAAAA,CAAEzJ,CAAAA,C2BkBL,C3BlBWC,CAAAA,C2BkBRC,C3BlBQD,O2BkBA,CAAC8/B,gBAAgB,CAAC,wBAAwB,CAAC;E3BlB3C9/B,A0BkBtB,ECCE,K3BlBoB,A2BkBf,CFbDiV,GEaKhO,AFbF,CEaG,EFbA,CzBLU,A2BkBP,CAAC,EAAEA,C3BlBI,A2BkBH,GAAG44B,I3BlBT9/B,CAAAA,A2BkBc,CAACyD,E3BlBfzD,CAAoBC,CAAAA,E2BkBC,E3BlBMC,A2BkBJgH,CAAC,EAAE,EAAE,G3BlBDhH,EAAUC,aAAAA,CAAcH,CAAAA,CAAAA,GAAQA,CAAAA,IAAQ,IAAA,mByBKW,EAC3F;AzBNgF,E0BmBhF,ICAI,GDAG,CCACm/B,AFXR,ECWU,EDXN5C,EEWU,CAAC2C,CFXP,IAAI,IAAI,CEWS,CAACY,EFXNvD,GEWW,CAACr1B,AFXR,CEWS,CAAC,CAACmO,CFXPvQ,GEWW,CAAC,KAAKq6B,AFXR,EAAE,IEWY,CAACL,YAAY,CAAC,CAAC,EAAE;A3ByBtE,A0BxBA,QCAQM,C3BwBQh/B,GyBnCZm8B,IAAI,EzBmCQn8B,A2BxBE,C3BwBQC,A2BxBPy/B,AFXR,CzBmCez/B,EAAAA,E2BxBF,AFXR,CEWS6G,CAAC,CAAC,CAAC;ADE5B,E1BsB0B7G,IACrBC,A2BxBC,C3BwBDA,E0BvBI4+B,C1BuBG7+B,AyBnCV,CzBmCUA,CAAQE,O0BvBD2+B,CAAChqB,GAAG,EAAE,Q1BuBL3U,CAAAA,CAAAA;EAAAA,A0BtBlB,ECDE,K3BuBgBA,A0BtBX,CAAC,ADXFi8B,ECWI,GAAGtnB,ADXF,GCWK,ADXF,ECWIwb,OAAO,CAAC,gFAAgF,EAAE,IAAI,CAAC,GAAG,GAAG;AACzH,I1BqBoBnwB,A2BrBhBo/B,G3BqBgBp/B,EAKbD,CAAAA,CAAKE,CyBrCR,EzBqCQA,A2B1BE,GAAG,C3B0BEN,CyBrCR,EEWU,AFXR,CACL,IzBoCWA,CAASO,eAAAA,CAAgBC,SAAAA,IAAaR,QAAAA,CAA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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n// an element's offsetParent property will return null whenever it, or any of its parents,\n// is hidden via the display style property.\nexport function isHidden(el) {\n\treturn (el.offsetParent === null);\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n\n/**\n * Check if a number is valid for svg attributes\n * @param {object} candidate Candidate to test\n * @param {Boolean} nonNegative flag to treat negative number as invalid\n */\nexport function isValidNumber(candidate, nonNegative=false) {\n\tif (Number.isNaN(candidate)) return false;\n\telse if (candidate === undefined) return false;\n\telse if (!Number.isFinite(candidate)) return false;\n\telse if (nonNegative && candidate < 0) return false;\n\telse return true;\n}\n\n/**\n * Round a number to the closes precision, max max precision 4\n * @param {Number} d Any Number\n */\nexport function round(d) {\n\t// https://floating-point-gui.de/\n\t// https://www.jacklmoore.com/notes/rounding-in-javascript/\n\treturn Number(Math.round(d + 'e4') + 'e-4');\n}\n\n/**\n * Creates a deep clone of an object\n * @param {Object} candidate Any Object\n */\n export function deepClone(candidate) {\n\tlet cloned, value, key;\n  \n\tif (candidate instanceof Date) {\n\t  return new Date(candidate.getTime());\n\t}\n  \n\tif (typeof candidate !== \"object\" || candidate === null) {\n\t  return candidate;\n\t}\n  \n\tcloned = Array.isArray(candidate) ? [] : {};\n  \n\tfor (key in candidate) {\n\t  value = candidate[key];\n  \n\t  cloned[key] = deepClone(value);\n\t}\n  \n\treturn cloned;\n  }","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/32685393\n\tlet HEX_RE = /(^\\s*)(#)((?:[A-Fa-f0-9]{3}){1,2})$/i;\n\tlet RGB_RE = /(^\\s*)(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/i;\n\treturn HEX_RE.test(string) || RGB_RE.test(string);\n}\n\nexport const getColor = (color) => {\n\t// When RGB color, convert to hexadecimal (alpha value is omitted)\n\tif((/rgb[a]{0,1}\\([\\d, ]+\\)/gim).test(color)) {\n\t\treturn (/\\D+(\\d*)\\D+(\\d*)\\D+(\\d*)/gim).exec(color)\n\t\t\t.map((x, i) => (i !== 0 ? Number(x).toString(16) : '#'))\n\t\t\t.reduce((c, ch) => `${c}${ch}`);\n\t}\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth, isValidNumber } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\nimport { lightenDarkenColor } from './colors';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif (!isValidNumber(y)) y = 0;\n\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif (!isValidNumber(x)) x = 0;\n\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\t// Preprocess numbers to avoid svg building errors\n\tif (!isValidNumber(x)) x = 0;\n\tif (!isValidNumber(y)) y = 0;\n\tif (!isValidNumber(height, true)) height = 0;\n\tif (!isValidNumber(width, true)) width = 0;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\t\t\n\t\tif (parent) {\n\t\t\tparent.replaceChild(animElement, unit);\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tif (animElement[1]) {\n\t\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\t\telements[i][0] = newElements[i];\n\t\t}\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\"Thursday\", \"Friday\", \"Saturday\"];\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short=false) {\n\tlet monthName = MONTH_NAMES[i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.reverse().map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t\td.values = vals;\n\t\t}\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import '../css/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth, isHidden } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\nimport { getColor, isValidColor } from '../utils/colors';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\nimport { deepClone } from  '../utils/helpers';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\t// deepclone options to avoid making changes to orignal object\n\t\toptions = deepClone(options);\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = this.validateColors(options.colors, this.type);\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tvalidateColors(colors, type) {\n\t\tconst validColors = [];\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\n\t\tcolors.forEach((string) => {\n\t\t\tconst color = getColor(string);\n\t\t\tif(!isValidColor(color)) {\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t} else {\n\t\t\t\tvalidColors.push(color);\n\t\t\t}\n\t\t});\n\t\treturn validColors;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\tif (ResizeObserver) {\n\t\t\tthis.resizeObserver = new ResizeObserver(this.boundDrawFn);\n\t\t\tthis.resizeObserver.observe(this.parent);\n\t\t}\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\tif (this.resizeObserver) this.resizeObserver.disconnect();\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tif (onlyWidthChange && isHidden(this.parent)) {\n\t\t\t// Don't update anything if the chart is hidden\n\t\t\treturn;\n\t\t}\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t\tthis.renderLegend();\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { truncateString } from '../utils/draw-utils';\nimport { legendDot } from '../utils/draw';\nimport { round } from '../utils/helpers';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.formatTooltipY = (args.tooltipOptions || {}).formatTooltipY;\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(round(d[0]));\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet formatted = this.config.formatTooltipY ? this.config.formatTooltipY(d) : d;\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${formatted}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\n\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\nconst ROW_HEIGHT = COL_WIDTH;\n// const DAY_INCR = 1;\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet validStarts = ['Sunday', 'Monday'];\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\n\t\t\t? options.startSubDomain : 'Sunday';\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = ROW_HEIGHT * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = ROW_HEIGHT * 2;\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tcolWidth: COL_WIDTH,\n\t\t\t\trowHeight: ROW_HEIGHT,\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* COL_WIDTH\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += ROW_HEIGHT;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = ROW_HEIGHT;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name && d.name.replace(/<|>|&/g, (char) => char == '&' ? '&amp;' : char == '<' ? '&lt;' : '&gt;'),\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tlet dbi = this.dataByIndex[index];\n\n\t\t\tthis.tip.setValues(\n\t\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\t\tdbi.values,\n\t\t\t\tindex\n\t\t\t);\n\n\t\t\tthis.tip.showTip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import * as Charts from './chart';\n\nlet frappe     = { };\n\nfrappe.NAME    = 'Frappe Charts';\nfrappe.VERSION = '1.6.2';\n\nfrappe         = Object.assign({ }, frappe, Charts);\n\nexport default frappe;","import \"./styles.css\";\nimport \"../node_modules/frappe-charts/\";\nimport { Chart } from \"frappe-charts/dist/frappe-charts.min.esm\"\nconst fetchButton = document.getElementById(\"submit-data\");\n\nconst getData = async(code) => {\n  const url = \"https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px\";\n  //console.log(code);\n\n  if (code == null || code == undefined) {\n    code = \"SSS\";\n  }\n\n  const query = {\n    \"query\": [\n        {\n            \"code\": \"Vuosi\",\n            \"selection\": {\n                \"filter\": \"item\",\n                \"values\": [\n                    \"2000\",\n                    \"2001\",\n                    \"2002\",\n                    \"2003\",\n                    \"2004\",\n                    \"2005\",\n                    \"2006\",\n                    \"2007\",\n                    \"2008\",\n                    \"2009\",\n                    \"2010\",\n                    \"2011\",\n                    \"2012\",\n                    \"2013\",\n                    \"2014\",\n                    \"2015\",\n                    \"2016\",\n                    \"2017\",\n                    \"2018\",\n                    \"2019\",\n                    \"2020\",\n                    \"2021\"\n                ]\n            }\n        },\n        {\n            \"code\": \"Alue\",\n            \"selection\": {\n                \"filter\": \"item\",\n                \"values\": [\n                    code\n                ]\n            }\n        },\n        {\n            \"code\": \"Tiedot\",\n            \"selection\": {\n                \"filter\": \"item\",\n                \"values\": [\n                    \"vaesto\"\n                ]\n            }\n        }\n    ],\n    \"response\": {\n        \"format\": \"json-stat2\"\n    }\n  }\n\n  const res = await fetch(url, {\n    method: \"POST\",\n    headers: {\"content-type\": \"application/json\"},\n    body: JSON.stringify(query)\n  });\n  if(!res.ok) {\n    return;\n  }\n  const data = await res.json();\n  \n  return data;\n\n}\n\nconst buildChart = async (municipality) => {\n  let code;\n  if (municipality != null || municipality != undefined) {\n    code = await municipalityCheck(municipality);\n  }\n  \n  const data = await getData(code);\n\n  const labels = Object.values(data.dimension.Vuosi.category.label);\n  const population = data.value; \n  const theData = [];\n  theData[0] = {\n    name: \"population\",\n    values: population\n  }\n\n  const chartData = {\n    labels: labels,\n    datasets: theData\n  }\n  \n  const chart = new frappe.Chart(\"#chart\", {\n    title: \"Finnish population\",\n    data: chartData,\n    type: 'line', \n    height: 450,\n    colors: ['#eb5146']\n  });\n}\n\nconst municipalityCheck = async(municipality) => {\n  const resp = await fetch(\"https://statfin.stat.fi/PxWeb/api/v1/en/StatFin/synt/statfin_synt_pxt_12dy.px\", \n  {method: \"GET\"});\n  if(!resp.ok) {\n    return;\n  }\n  const dataset = await resp.json();\n\n  const candidates = dataset.variables[1].valueTexts;\n  let code;\n\n  for (let i = 0; i < candidates.length; i++) {\n    if (municipality.toLowerCase() == candidates[i].toLowerCase()) {\n       code = dataset.variables[1].values[i];\n      break;\n    }\n  }\n  \n  return code;\n}\n\nfetchButton.addEventListener(\"click\", () => {\n  const municipality = document.getElementById(\"input-area\").value;\n  \n  buildChart(municipality);\n\n  event.preventDefault();\n})\n\n\n\nbuildChart();\n\n\n\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}